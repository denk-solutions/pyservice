name: test
on:
  pull_request:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: ".python-version"

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install the project
        run: uv sync --locked --all-extras --test

      - name: Load .env.dev
        run: |
          set -o allexport; source .env.test; set +o allexport

      - name: Run unit tests
        run: uv run pytest tests -v -m "not integration"

      - name: Run docker services
        if: github.ref == 'refs/heads/main'
        run: docker compose --env-file .env.test up -d

      - name: Wait for Postgres to be healthy
        run: |
          echo "Waiting for Postgres to be ready..."
          until [ "$(docker inspect --format='{{json .State.Health.Status}}' pyservice-db)" == '"healthy"' ]; do
            echo "Waiting..."
            sleep 2
          done
          echo "Postgres is healthy!"

      - name: Run migrations
        if: github.ref == 'refs/heads/main'
        run: uv run alembic upgrade head

      - name: Run integration tests
        if: github.ref == 'refs/heads/main'
        run: uv run pytest tests -v -m "integration"
